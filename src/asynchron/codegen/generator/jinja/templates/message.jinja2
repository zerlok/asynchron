{# @formatter:off #}
{% extends "base/python_module.jinja2" %}

{% macro render_python_type(type) -%}
    {{ type.path|join(".") }}
    {%- if type.type_parameters -%}
        [
        {%- for type_parameter in type.type_parameters -%}
            {{ render_python_type(type_parameter) }}
            {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
        ]
    {%- endif -%}
{%- endmacro %}

{% macro render_field_info(field) -%}
    {%- if field.default
                or field.alias
                or field.title
                or field.description
                or field.const
                or field.gt
                or field.ge
                or field.lt
                or field.le
                or field.multiple_of
                or field.min_items
                or field.max_items
                or field.min_length
                or field.max_length
                or field.allow_mutation
                or field.regex -%}
    Field(
        {% if field.default %}
        default={{ field.default|python_expr }},
        {% endif %}
        {% if field.alias %}
        alias="{{ field.alias }}",
        {% endif %}
        {% if field.title %}
        title="""{{ field.title }}""",
        {% endif %}
        {% if field.description %}
        description="""{{ field.description }}""",
        {% endif %}
{#            {% if field.const %}const={{ field.const }},
{% endif %}#}
        {% if field.gt %}
        gt={{ field.gt }},
        {% endif %}
        {% if field.ge %}
        ge={{ field.ge }},
        {% endif %}
        {% if field.lt %}
        lt={{ field.lt }},
        {% endif %}
        {% if field.le %}
        le={{ field.le }},
        {% endif %}
        {% if field.multiple_of %}
        multiple_of={{ field.multiple_of }},
        {% endif %}
        {% if field.min_items %}
        min_items={{ field.min_items }},
        {% endif %}
        {% if field.max_items %}
        max_items={{ field.max_items }},
        {% endif %}
        {% if field.min_length %}
        min_length={{ field.min_length }},
        {% endif %}
        {% if field.max_length %}
        max_length={{ field.max_length }},
        {% endif %}
        {% if field.allow_mutation %}
        allow_mutation={{ field.allow_mutation|python_expr }},
        {% endif %}
        {% if field.regex %}
        regex=r"""{{ field.regex }}""",
        {% endif %}
    )
    {%- else -%}
        Field()
    {%- endif %}
{%- endmacro %}


{% macro render_python_class_bases(bases) -%}
    {% if bases -%}
        (
        {%- for base in bases -%}
            {{ render_python_type(base) }}
            {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
        )
    {%- endif %}
{%- endmacro %}

{% block imports %}
    {% for import in imports|unique %}
        {% if import.module_path|first != "builtins" %}
            {% if import.path %}
from {{ import.module_path|join(".") }} import {{ import.path|join(".") }}
            {% else %}
import {{ import.module_path|join(".") }}
            {% endif %}
        {% endif %}
    {% endfor %}
{% endblock %}

{% block classes %}
    {% for message in messages %}
class {{ message.path|pascalcase|join("") }}{{ render_python_class_bases(message.bases) }}:
        {% if message.descrition %}
        """{{ message.description }}"""
        {% endif %}
        {% if message.fields %}
            {% for field in message.fields|sorted(attribute="name") %}
    {{ field.name|snakecase }}: {{ render_python_type(field.of_type) }} = {{ render_field_info(field.info) }}
            {% endfor %}
        {% else %}
    pass
        {% endif %}


    {% endfor %}
{% endblock %}
{# @formatter:on #}
