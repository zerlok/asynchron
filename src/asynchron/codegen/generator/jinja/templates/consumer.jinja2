{# @formatter:off #}
{% extends "base/python_module.jinja2" %}

{% block imports %}
import abc

from asynchron.amqp.controller import AioPikaBasedAmqpController
from asynchron.amqp.serializer.pydantic import PydanticMessageSerializer
from asynchron.core.amqp import AmqpConsumerBindings
from asynchron.core.consumer import CallableMessageConsumer

from .message import (
    {% for consumer in app.consumers|sorted("name") %}
    {{ consumer.message.path|pascalcase }},
    {% endfor %}
)
{% endblock %}

{% block classes %}
class {{ app.name|pascalcase }}ConsumerFacade(metaclass=abc.ABCMeta):
    {% if app.description %}
    """{{ app.description }}"""

    {% endif %}
    def __init__(
            self,
            controller: AioPikaBasedAmqpController,
    ) -> None:
        {% if app.consumers %}
        {% for consumer in app.consumers|sorted("name") %}
        controller.bind_consumer(
            decoder=PydanticMessageSerializer(
                model={{ consumer.message.path|pascalcase }},  # type: ignore[misc]
            ),
            consumer=CallableMessageConsumer(
                consumer=self.consume_{{ consumer.name|snakecase }},
            ),
            bindings=AmqpConsumerBindings(
                exchange_name="{{ consumer.exchange_name }}",
                binding_keys=(
                {% for binding_key in consumer.binding_keys %}
                    "{{ binding_key }}",
                {% endfor %}
                ),
                queue_name="{{ consumer.queue_name }}",
                is_auto_delete_enabled=None,
                is_exclusive=None,
                is_durable=None,
                prefetch_count=None,
            ),
        )
        {% endfor %}
        {% else %}
        pass
        {% endif %}

    {% if app.consumers %}
        {% for consumer in app.consumers|sorted("name") %}
    @abc.abstractmethod
    async def consume_{{ consumer.name|snakecase }}(
            self,
            message: {{ consumer.message.path|pascalcase }},
    ) -> None:
            {% if consumer.description %}
        """{{ consumer.description }}"""
            {% endif %}
        raise NotImplementedError

        {% endfor %}
    {% else %}
    pass

    {% endif %}
{% endblock %}
{# @formatter:on #}
