[tool.poetry]
name = "asynchron"
version = "0.4.0"
description = "Python service framework with code generator based on AsyncAPI specification"
authors = ["zerlok <denergytro@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/zerlok/asynchron"
repository = "https://github.com/zerlok/asynchron"
keywords = ["asyncapi", "codegen", "amqp"]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development",
    "Topic :: Software Development :: Code Generators",
]
include = [
    "LICENSE",
]

[tool.poetry.dependencies]
python = "^3.8"
Jinja2 = { version = "^3.1.2", optional = true }
pydantic = { version = "^1.9.1", optional = true }
aio-pika = { version = "^8.0.3", optional = true }
PyYAML = { version = "^6.0", optional = true }
click = { version = "^8.1.3", optional = true }
dependency-injector = { version = "^4.39.1", optional = true }
jsonschema = { version = "^4.6.0", optional = true }
stringcase = { version = "^1.2.0", optional = true }

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
mypy = "^0.961"
types-PyYAML = "^6.0.1"
pytest-cases = "^3.6.5"
pytest-cov = "^3.0.0"
pytest-asyncio = "^0.18.3"

[tool.poetry.extras]
cli = ["pydantic", "Jinja2", "PyYAML", "click", "dependency-injector", "jsonschema", "stringcase"]
aio-pika = ["pydantic", "aio-pika"]

[tool.poetry.scripts]
asynchron = "asynchron.codegen.cli.click_impl:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--asyncio-mode=auto",
    "--strict-markers",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "asyncio: test asyncio",
    "cli: test emulate CLI",
]
testpaths = ["./tests"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abc.abstractmethod",
    "if __name__ == .__main__.:",
]
show_missing = true

[tool.coverage.html]
directory = "htmlcov/"

[tool.mypy]
python_version = "3.8"

files = ["./src", "./tests"]

# FIXME: remove any expressions
disallow_any_expr = false
disallow_any_explicit = true
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_no_return = true
warn_unreachable = true

strict_equality = true
implicit_reexport = false

show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

warn_unused_configs = true
#exclude = "tests/data.*"

[[tool.mypy.overrides]]
module = ["asynchron.providers"]
disallow_any_expr = false
disallow_any_decorated = false

[[tool.mypy.overrides]]
module = ["asynchron.amqp.consumer.controller"]
disallow_any_expr = false
disallow_any_decorated = false

[[tool.mypy.overrides]]
module = ["asynchron.amqp.publisher.controller"]
disallow_any_expr = false
disallow_any_decorated = false

[[tool.mypy.overrides]]
module = ["asynchron.codegen.cli"]
disallow_any_expr = false

[[tool.mypy.overrides]]
module = ["asynchron.codegen.spec.asyncapi"]
disallow_any_expr = false
disallow_any_explicit = false
disallow_any_decorated = false

[[tool.mypy.overrides]]
module = ["asynchron.codegen.generator.jinja.*"]
disallow_any_expr = false
disallow_any_explicit = false
disallow_any_decorated = false

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_any_expr = false
disallow_any_explicit = false
disallow_any_decorated = false
disallow_any_unimported = false
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = ["tests.configs.*"]
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["jsonschema.*", "stringcase.*"]
follow_imports = "skip"
ignore_errors = true
ignore_missing_imports = true

# FIXME: enalbe pydantic mypy plugin support after https://github.com/samuelcolvin/pydantic/pull/2908 released, also
#  see https://pydantic-docs.helpmanual.io/mypy_plugin/#enabling-the-plugin
#[tool.mypy.pydantic-mypy]
#init_forbid_extra = true
#init_typed = true
#warn_required_dynamic_aliases = true
#warn_untyped_fields = true
